import discord
from discord.ext import commands, tasks
import asyncio
import random
from datetime import datetime, time
from flask import Flask
from threading import Thread
import os

# Flask app to keep bot alive
app = Flask('')

@app.route('/')
def home():
    return "Bot is online!"

def run_flask():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run_flask)
    t.start()

# Bot setup
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# List of 30 production tips (generated by Grok)
tips = [
    "Layer a deep 808 with a punchy kick for thicker trap beats.",
    "Use sidechain compression on bass to let the kick cut through the mix.",
    "Add a subtle vinyl crackle to give your hip-hop beat a nostalgic vibe.",
    "Experiment with hi-hat rolls at different tempos for dynamic trap energy.",
    "Use a high-pass filter on pads to avoid muddying your low end.",
    "Pitch down vocal chops for a dark, moody trap atmosphere.",
    "Automate reverb sends to create movement in your melodies.",
    "Layer snares with a clap for extra snap in your hip-hop beats.",
    "Use a low-pass filter on synths to create smooth transitions.",
    "Add white noise risers before drops for intense trap buildups.",
    "Pan hi-hats slightly left and right for a wider stereo image.",
    "Use distortion on 808s sparingly to add grit without overpowering.",
    "Chop vocal samples in your DAW for unique hip-hop textures.",
    "Set your kick and snare to hit at different velocities for a humanized feel.",
    "Use a tape stop effect on the last bar for a dramatic beat switch.",
    "Layer multiple 808s with different pitches for a fuller bassline.",
    "Add subtle delay to hi-hats for a bouncy trap groove.",
    "Use EQ to carve out space around 200 Hz for clearer kicks.",
    "Experiment with reverse cymbals for smooth transitions in your beats.",
    "Sidechain your synths to the kick for a cleaner trap mix.",
    "Use a vocoder on background vocals for a futuristic hip-hop sound.",
    "Add a subtle shaker loop to keep your beat driving forward.",
    "Use a high shelf EQ boost on hi-hats for extra sparkle.",
    "Layer ambient pads for a cinematic trap vibe.",
    "Use a gate on snares to tighten up your rhythm section.",
    "Pitch bend 808s for a sliding effect in trap drops.",
    "Add a low-pass filter sweep to create tension before a drop.",
    "Use a reverb tail on snares for a bigger, arena-like sound.",
    "Experiment with triplet hi-hats for a modern trap flow.",
    "Check out my Trap Bundle for 10 pro beats to level up your tracks: YOUR_PAYHIP_LINK"
]

# Channel ID for posting tips (replace with your channel ID)
CHANNEL_ID = 1040050694536835093  # Update with your Discord channel ID

# Daily tip scheduler
@tasks.loop(time=time(hour=9, minute=0))  # Posts at 9 AM daily
async def daily_tip():
    channel = bot.get_channel(CHANNEL_ID)
    if channel:
        tip = random.choice(tips)
        await channel.send(f"ðŸŽ¹ **Daily Producer Tip** ðŸŽ¹\n{tip}\n\nðŸ”¥ Want pro trap beats? Grab my bundle: YOUR_PAYHIP_LINK")

# Manual tip command
@bot.command()
async def tip(ctx):
    tip = random.choice(tips)
    await ctx.send(f"ðŸŽ¹ **Producer Tip** ðŸŽ¹\n{tip}\n\nðŸ”¥ Want pro trap beats? Grab my bundle: YOUR_PAYHIP_LINK")

# Bot startup
@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')
    keep_alive()  # Start Flask server
    if not daily_tip.is_running():
        daily_tip.start()

# Run the bot
bot.run(os.getenv('DISCORD_BOT_TOKEN'))  # Use environment variable for token
